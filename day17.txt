B01 b = new B01();
	b.test();
	C01 c = new C01();
	c.test();
	
	A01 a01;
	a01 = new B01();
	a01.test();		b의 test 호출
	a01 = new C01();
	a01.test();		c의 test 호출

B01과 C01이 같은 부모(A01)를 상속하고 있을 때 부모를 변수로 만들어서 호출

abstract : 추상화 기능(미완성)

abstract class A05{
	public void aaa() {
		System.out.println("부모 기능");
	}
	public abstract void test();
}

abstract 메서드가 있는 abstract 클래스를 부모클래스로 상속받는 경우 상속받은 자식 클래스에 abstract 메서드와 같은 이름의 메서드가 존재해야 함(없으면 에러가 발생함) 

interface : 다중 상속이 가능함, 인터페이스를 상속할 자식 클래스가 abstract 처럼 같은 메서드를 가지고 있어야 한다

public interface Inte06 {
	public void test();	인터페이스 내에는 문법이 있는 메서드는 생성 할 수 없다. 추상적인 메서드만 가능
}

class B06 extends A06 implements Inte06{}	, 해서 여러 인터페이스 다중 상속 가능
